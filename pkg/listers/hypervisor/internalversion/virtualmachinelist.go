/*
Copyright 2017 The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// This file was automatically generated by lister-gen

package internalversion

import (
	hypervisor "github.com/dippynark/kube-qemu/pkg/apis/hypervisor"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// VirtualMachineListLister helps list VirtualMachineLists.
type VirtualMachineListLister interface {
	// List lists all VirtualMachineLists in the indexer.
	List(selector labels.Selector) (ret []*hypervisor.VirtualMachineList, err error)
	// VirtualMachineLists returns an object that can list and get VirtualMachineLists.
	VirtualMachineLists(namespace string) VirtualMachineListNamespaceLister
	VirtualMachineListListerExpansion
}

// virtualMachineListLister implements the VirtualMachineListLister interface.
type virtualMachineListLister struct {
	indexer cache.Indexer
}

// NewVirtualMachineListLister returns a new VirtualMachineListLister.
func NewVirtualMachineListLister(indexer cache.Indexer) VirtualMachineListLister {
	return &virtualMachineListLister{indexer: indexer}
}

// List lists all VirtualMachineLists in the indexer.
func (s *virtualMachineListLister) List(selector labels.Selector) (ret []*hypervisor.VirtualMachineList, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*hypervisor.VirtualMachineList))
	})
	return ret, err
}

// VirtualMachineLists returns an object that can list and get VirtualMachineLists.
func (s *virtualMachineListLister) VirtualMachineLists(namespace string) VirtualMachineListNamespaceLister {
	return virtualMachineListNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// VirtualMachineListNamespaceLister helps list and get VirtualMachineLists.
type VirtualMachineListNamespaceLister interface {
	// List lists all VirtualMachineLists in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*hypervisor.VirtualMachineList, err error)
	// Get retrieves the VirtualMachineList from the indexer for a given namespace and name.
	Get(name string) (*hypervisor.VirtualMachineList, error)
	VirtualMachineListNamespaceListerExpansion
}

// virtualMachineListNamespaceLister implements the VirtualMachineListNamespaceLister
// interface.
type virtualMachineListNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all VirtualMachineLists in the indexer for a given namespace.
func (s virtualMachineListNamespaceLister) List(selector labels.Selector) (ret []*hypervisor.VirtualMachineList, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*hypervisor.VirtualMachineList))
	})
	return ret, err
}

// Get retrieves the VirtualMachineList from the indexer for a given namespace and name.
func (s virtualMachineListNamespaceLister) Get(name string) (*hypervisor.VirtualMachineList, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(hypervisor.Resource("virtualmachinelist"), name)
	}
	return obj.(*hypervisor.VirtualMachineList), nil
}
